services:
  postgres:
    image: postgres:15-alpine
    container_name: uzsmspanel-postgres
    environment:
      POSTGRES_DB: ${DB_DATABASE:-sms_panel}
      POSTGRES_USER: ${DB_USERNAME:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres123}
    ports:
      - '${DB_PORT:-5432}:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - uzsmspanel-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME:-postgres}"]
      interval: 30s
      timeout: 10s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: uzsmspanel-redis
    command: redis-server --appendonly yes ${REDIS_PASSWORD:+--requirepass $REDIS_PASSWORD}
    ports:
      - '${REDIS_PORT:-6379}:6379'
    volumes:
      - redis_data:/data
    networks:
      - uzsmspanel-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", ${REDIS_PASSWORD:+-a $REDIS_PASSWORD}, "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  dashboard-app:
    build:
      context: .
      dockerfile: Dockerfile.dashboard
      args:
        NODE_ENV: production
    container_name: uzsmspanel-dashboard
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - '${DASHBOARD_PORT:-3000}:${DASHBOARD_PORT:-3000}'
    environment:
      DB_HOST: ${DB_HOST:-postgres}
      DB_PORT: ${DB_PORT:-5432}
      DB_USERNAME: ${DB_USERNAME:-postgres}
      DB_PASSWORD: ${DB_PASSWORD:-postgres123}
      DB_DATABASE: ${DB_DATABASE:-sms_panel}
      DB_SCHEMA: ${DB_SCHEMA:-public}
      DB_SYNCHRONIZE: ${DB_SYNCHRONIZE:-true}
      REDIS_HOST: ${REDIS_HOST:-redis}
      REDIS_PORT: ${REDIS_PORT:-6379}
      REDIS_DB: ${REDIS_DB:-1}
      REDIS_PASSWORD: ${REDIS_PASSWORD:-}
      DASHBOARD_PORT: ${DASHBOARD_PORT:-3000}
      JWT_SECRET: ${JWT_SECRET:-0e5de417b661eae3950461dfdbb7f855a09de59bbfb92555c71727aa5334dc5c}
      NODE_ENV: production
      MY_GO_URL: ${MY_GO_URL:-http://10.1.1.103:25000}
      IMAGES_URL: ${IMAGES_URL:-https://files.isds.uz}
      IMAGES_PROJECT_NAME: ${IMAGES_PROJECT_NAME:-sms_panel}
      MEDIA_DIRECTORY: ${MEDIA_DIRECTORY:-public}
      SERVER_BASE_URL: ${SERVER_BASE_URL:-http://localhost:3001}
    restart: unless-stopped
    volumes:
      - uploads_data:/app/uploads
      - ./public:/app/public:ro
    networks:
      - uzsmspanel-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  frontend-app:
    build:
      context: .
      dockerfile: Dockerfile.frontend
      args:
        NODE_ENV: production
    container_name: uzsmspanel-frontend
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - '${FRONTEND_PORT:-3001}:${FRONTEND_PORT:-3001}'
    environment:
      DB_HOST: ${DB_HOST:-postgres}
      DB_PORT: ${DB_PORT:-5432}
      DB_USERNAME: ${DB_USERNAME:-postgres}
      DB_PASSWORD: ${DB_PASSWORD:-postgres123}
      DB_DATABASE: ${DB_DATABASE:-sms_panel}
      DB_SCHEMA: ${DB_SCHEMA:-public}
      DB_SYNCHRONIZE: ${DB_SYNCHRONIZE:-true}
      REDIS_HOST: ${REDIS_HOST:-redis}
      REDIS_PORT: ${REDIS_PORT:-6379}
      REDIS_DB: ${REDIS_DB:-1}
      REDIS_PASSWORD: ${REDIS_PASSWORD:-}
      FRONTEND_PORT: ${FRONTEND_PORT:-3001}
      JWT_SECRET: ${JWT_SECRET:-0e5de417b661eae3950461dfdbb7f855a09de59bbfb92555c71727aa5334dc5c}
      NODE_ENV: production
      MY_GO_URL: ${MY_GO_URL:-http://10.1.1.103:25000}
      IMAGES_URL: ${IMAGES_URL:-https://files.isds.uz}
      IMAGES_PROJECT_NAME: ${IMAGES_PROJECT_NAME:-sms_panel}
      MEDIA_DIRECTORY: ${MEDIA_DIRECTORY:-public}
      SERVER_BASE_URL: ${SERVER_BASE_URL:-http://localhost:3001}
    restart: unless-stopped
    volumes:
      - uploads_data:/app/uploads
      - ./public:/app/public:ro
    networks:
      - uzsmspanel-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  uploads_data:
    driver: local

networks:
  uzsmspanel-network:
    driver: bridge
    name: uzsmspanel-network
