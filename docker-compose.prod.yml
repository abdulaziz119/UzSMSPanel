services:
  postgres:
    image: postgres:15-alpine
    container_name: uzsmspanel-postgres-prod
    restart: unless-stopped
    environment:
      POSTGRES_DB: uzsmspanel_prod
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${DB_PASSWORD:-strong_password_here}
      POSTGRES_SCHEMA: uzsmspanel
    ports:
      - "5432:5432"
    volumes:
      - postgres_prod_data:/var/lib/postgresql/data
    networks:
      - uzsmspanel-network

  uzsmspanel-app:
    build: .
    container_name: uzsmspanel-app
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_PASSWORD=${DB_PASSWORD:-strong_password_here}
      - DB_DATABASE=uzsmspanel_prod
      - DB_SCHEMA=uzsmspanel
      - JWT_SECRET=${JWT_SECRET:-your_jwt_secret_here}
      - SMTP_USER=${SMTP_USER:-}
      - SMTP_PASS=${SMTP_PASS:-}
      - FRONTEND_PORT=3000
      - DASHBOARD_PORT=8080
    ports:
      - "3000:3000"  # Frontend
      - "8080:8080"  # Dashboard
    depends_on:
      - postgres
    networks:
      - uzsmspanel-network

  nginx:
    image: nginx:alpine
    container_name: uzsmspanel-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - uzsmspanel-app
    networks:
      - uzsmspanel-network

volumes:
  postgres_prod_data:

networks:
  uzsmspanel-network:
    driver: bridge
